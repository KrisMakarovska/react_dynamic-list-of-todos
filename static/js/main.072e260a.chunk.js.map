{"version":3,"sources":["types/FilteredBy.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["FilteredBy","TodoList","todos","currentTodo","onClick","className","map","todo","id","completed","classname","title","type","userId","TodoFilter","query","setQuery","filter","setFilter","value","onChange","event","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","TodoModal","user","onCloseBtn","href","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","App","useState","setTodos","todosisLoaded","settodosisLoaded","setUser","setCurrentTodo","visibleTodos","todosCopy","preparedQuery","toLowerCase","trim","includes","filteredTodos","loadUser","a","userFromServer","useEffect","todosFromServer","catch","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.072e260a.chunk.js","sourcesContent":["export enum FilteredBy {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classname from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  currentTodo: Todo | null,\n  onClick: (userId:number, todo:Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  currentTodo,\n  onClick,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo: Todo) => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classname(\n                  { 'has-text-success': todo.completed },\n                  { 'has-text-danger': !todo.completed },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onClick(todo.userId, todo)}\n              >\n                <span className=\"icon\">\n                  {currentTodo === todo ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FilteredBy } from '../../types/FilteredBy';\n\ntype Props = {\n  query: string,\n  setQuery: (query: string) => void,\n  filter: FilteredBy,\n  setFilter: (query: FilteredBy) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  filter,\n  setFilter,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={(event) => setFilter(\n            event.target.value as FilteredBy,\n          )}\n        >\n          <option value={FilteredBy.ALL}>All</option>\n          <option value={FilteredBy.ACTIVE}>Active</option>\n          <option value={FilteredBy.COMPLETED}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  user: User | null,\n  todo: Todo,\n  onCloseBtn: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ user, todo, onCloseBtn }) => {\n  const {\n    id, title, completed,\n  } = todo;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseBtn}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { FilteredBy } from './types/FilteredBy';\n\nimport { getTodos, getUser } from './api';\n\nconst filteredTodos = (todos: Todo[], query: string, filter: FilteredBy) => {\n  let todosCopy = [...todos];\n\n  if (query) {\n    const preparedQuery = query.toLowerCase().trim();\n\n    todosCopy = todosCopy.filter((todo) => todo.title.toLowerCase().includes(preparedQuery));\n  }\n\n  switch (filter) {\n    case FilteredBy.ACTIVE:\n      todosCopy = todosCopy.filter(todo => !todo.completed);\n      break;\n\n    case FilteredBy.COMPLETED:\n      todosCopy = todosCopy.filter(todo => todo.completed);\n      break;\n\n    case FilteredBy.ALL:\n    default:\n      break;\n  }\n\n  return todosCopy;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosisLoaded, settodosisLoaded] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const [currentTodo, setCurrentTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState(FilteredBy.ALL);\n\n  const visibleTodos = filteredTodos(todos, query, filter);\n\n  const loadUser = async (userId:number) => {\n    const userFromServer = await getUser(userId);\n\n    setUser(userFromServer);\n    settodosisLoaded(true);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        settodosisLoaded(true);\n\n        return setTodos(todosFromServer);\n      })\n      .catch(() => {\n        // eslint-disable-next-line no-alert\n        alert('Sorry, there is no todos');\n      });\n  }, []);\n\n  const closeModal = () => {\n    setUser(null);\n    setCurrentTodo(null);\n  };\n\n  const onTodoListBtnClick = (userId: number, todo: Todo) => {\n    setCurrentTodo(todo);\n    loadUser(userId);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filter={filter}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todosisLoaded && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                currentTodo={currentTodo}\n                onClick={onTodoListBtnClick}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {currentTodo && (\n        <TodoModal\n          user={user}\n          todo={currentTodo}\n          onCloseBtn={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}